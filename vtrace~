#!/usr/bin/python
import os, sys
from pprint import pprint

args = ['e', 'a', 'h', 'c', 'r', 'equiv', 'assess', 'hide', 'circle', 'restore']

if not sys.argv[1].replace('-', '') in  args:
    print "Invalid argument!"
    print "Usage: ./vtrace [args] [file] [states]"
    print "     : args = ['-e', '-a', '-h', '-c', '-r', '-equiv', '-assess', '-hide', '-circle', '-restore']"


first_arg = sys.argv[1].replace('-', '')

if first_arg == 'e' or first_arg == 'equiv':
    if len(sys.argv) == 3:
        os.system("perl ktrace_equiv.pl " + sys.argv[2])
    elif len(sys.argv) >= 5:
        os.system("perl ktrace_equiv.pl " + sys.argv[2] + " " + sys.argv[3] + " " + sys.argv[4])
    else:
        print "The number of arguments does't seem right."

elif first_arg == 'a' or first_arg == 'assess':
    os.system("perl lts_info.pl " + sys.argv[2])

elif first_arg == 'h' or first_arg == 'hide':
    os.system("perl hide_inner_act.pl " + sys.argv[2])

elif first_arg == 'c' or first_arg == 'circle':
    os.system("perl findloop.pl " + sys.argv[2])

else: # first_arg == 'r' or first_arg == 'restore':
    print "Usage: ./vtrace -r quotient-file class-fill original-file"
    os.system("perl ktrace_equiv.pl " + sys.argv[2] + " " + sys.argv[3] + " " + sys.argv[4])

    
